#############################################################################
# Makefile for building: bin/HydrusDBIO
# Generated by qmake (3.1) (Qt 5.9.6)
# Project:  HydrusDBIO.pro
# Template: app
# Command: /usr/bin/qmake-qt5 -o Makefile HydrusDBIO.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -std=gnu++11 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I. -Itclap -isystem /usr/include/qt5 -isystem /usr/include/qt5/QtSql -isystem /usr/include/qt5/QtCore -I. -I/usr/lib64/qt5/mkspecs/linux-g++
QMAKE         = /usr/bin/qmake-qt5
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
QINSTALL      = /usr/bin/qmake-qt5 -install qinstall
QINSTALL_PROGRAM = /usr/bin/qmake-qt5 -install qinstall -exe
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
DISTNAME      = HydrusDBIO1.0.0
DISTDIR = /run/media/fengwenzhao/data/workspace/HydursExecuterTools/copyrightversion/.tmp/HydrusDBIO1.0.0
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,\$$ORIGIN/lib
LIBS          = $(SUBLIBS) -L./ -lpq -lQt5Sql -lQt5Core -lpthread 
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = strip

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		A_LevelObject.cpp \
		HydrusResultCompresser.cpp \
		NodeInfoObject.cpp \
		T_LevelObject.cpp \
		HydrusInputCompresser.cpp \
		SelectorParse.cpp \
		AtmosphParser.cpp \
		ProfileParser.cpp \
		importhydrusinputfile.cpp \
		importhydrusoutputfile.cpp \
		importer.cpp \
		A_LevelParser.cpp \
		BalanceObject.cpp \
		BalanceParse.cpp \
		Nod_InfParser.cpp \
		RuninfoParser.cpp \
		T_LevelParser.cpp \
		profiledatabaseobject.cpp \
		atmosphdatabaseobject.cpp \
		exporthydrusinputfile.cpp \
		selectordatabaseobject.cpp \
		exporter.cpp \
		exporthydrusoutputfile.cpp \
		aleveldatabaseobject.cpp \
		tleveldatabaseobject.cpp \
		nodinfodatabaseobject.cpp \
		balancedatabaseobject.cpp \
		atmosphobject.cpp \
		profileobject.cpp \
		selectorobject.cpp \
		obsnodedatabaseobject.cpp \
		obs_nodeobject.cpp \
		obs_nodeparser.cpp 
OBJECTS       = main.o \
		A_LevelObject.o \
		HydrusResultCompresser.o \
		NodeInfoObject.o \
		T_LevelObject.o \
		HydrusInputCompresser.o \
		SelectorParse.o \
		AtmosphParser.o \
		ProfileParser.o \
		importhydrusinputfile.o \
		importhydrusoutputfile.o \
		importer.o \
		A_LevelParser.o \
		BalanceObject.o \
		BalanceParse.o \
		Nod_InfParser.o \
		RuninfoParser.o \
		T_LevelParser.o \
		profiledatabaseobject.o \
		atmosphdatabaseobject.o \
		exporthydrusinputfile.o \
		selectordatabaseobject.o \
		exporter.o \
		exporthydrusoutputfile.o \
		aleveldatabaseobject.o \
		tleveldatabaseobject.o \
		nodinfodatabaseobject.o \
		balancedatabaseobject.o \
		atmosphobject.o \
		profileobject.o \
		selectorobject.o \
		obsnodedatabaseobject.o \
		obs_nodeobject.o \
		obs_nodeparser.o
DIST          = /usr/lib64/qt5/mkspecs/features/spec_pre.prf \
		/usr/lib64/qt5/mkspecs/common/unix.conf \
		/usr/lib64/qt5/mkspecs/common/linux.conf \
		/usr/lib64/qt5/mkspecs/common/sanitize.conf \
		/usr/lib64/qt5/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt5/mkspecs/common/g++-base.conf \
		/usr/lib64/qt5/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt5/mkspecs/qconfig.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_egl_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_fb_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_glx_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_input_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_kms_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_service_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_theme_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib64/qt5/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt5/mkspecs/features/qt_config.prf \
		/usr/lib64/qt5/mkspecs/linux-g++/qmake.conf \
		/usr/lib64/qt5/mkspecs/features/spec_post.prf \
		/usr/lib64/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt5/mkspecs/features/toolchain.prf \
		/usr/lib64/qt5/mkspecs/features/default_pre.prf \
		/usr/lib64/qt5/mkspecs/features/resolve_config.prf \
		/usr/lib64/qt5/mkspecs/features/default_post.prf \
		/usr/lib64/qt5/mkspecs/features/warn_on.prf \
		/usr/lib64/qt5/mkspecs/features/qt.prf \
		/usr/lib64/qt5/mkspecs/features/resources.prf \
		/usr/lib64/qt5/mkspecs/features/moc.prf \
		/usr/lib64/qt5/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt5/mkspecs/features/qmake_use.prf \
		/usr/lib64/qt5/mkspecs/features/file_copies.prf \
		/usr/lib64/qt5/mkspecs/features/testcase_targets.prf \
		/usr/lib64/qt5/mkspecs/features/exceptions.prf \
		/usr/lib64/qt5/mkspecs/features/yacc.prf \
		/usr/lib64/qt5/mkspecs/features/lex.prf \
		HydrusDBIO.pro A_LevelObject.h \
		HydrusResultCompresser.h \
		NodeInfoObject.h \
		T_LevelObject.h \
		HydrusInputCompresser.h \
		SelectorParse.h \
		AtmosphParser.h \
		ProfileParser.h \
		importhydrusinputfile.h \
		importhydrusoutputfile.h \
		importer.h \
		A_LevelParser.h \
		BalanceObject.h \
		BalanceParse.h \
		Nod_InfParser.h \
		RuninfoParser.h \
		T_LevelParser.h \
		profiledatabaseobject.h \
		atmosphdatabaseobject.h \
		exporthydrusinputfile.h \
		selectordatabaseobject.h \
		exporter.h \
		exporthydrusoutputfile.h \
		aleveldatabaseobject.h \
		tleveldatabaseobject.h \
		nodinfodatabaseobject.h \
		balancedatabaseobject.h \
		atmosphobject.h \
		profileobject.h \
		selectorobject.h \
		obsnodedatabaseobject.h \
		obs_nodeobject.h \
		obs_nodeparser.h main.cpp \
		A_LevelObject.cpp \
		HydrusResultCompresser.cpp \
		NodeInfoObject.cpp \
		T_LevelObject.cpp \
		HydrusInputCompresser.cpp \
		SelectorParse.cpp \
		AtmosphParser.cpp \
		ProfileParser.cpp \
		importhydrusinputfile.cpp \
		importhydrusoutputfile.cpp \
		importer.cpp \
		A_LevelParser.cpp \
		BalanceObject.cpp \
		BalanceParse.cpp \
		Nod_InfParser.cpp \
		RuninfoParser.cpp \
		T_LevelParser.cpp \
		profiledatabaseobject.cpp \
		atmosphdatabaseobject.cpp \
		exporthydrusinputfile.cpp \
		selectordatabaseobject.cpp \
		exporter.cpp \
		exporthydrusoutputfile.cpp \
		aleveldatabaseobject.cpp \
		tleveldatabaseobject.cpp \
		nodinfodatabaseobject.cpp \
		balancedatabaseobject.cpp \
		atmosphobject.cpp \
		profileobject.cpp \
		selectorobject.cpp \
		obsnodedatabaseobject.cpp \
		obs_nodeobject.cpp \
		obs_nodeparser.cpp
QMAKE_TARGET  = HydrusDBIO
DESTDIR       = bin/
TARGET        = bin/HydrusDBIO


first: all
####### Build rules

$(TARGET):  $(OBJECTS)  
	@test -d bin/ || mkdir -p bin/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: HydrusDBIO.pro /usr/lib64/qt5/mkspecs/linux-g++/qmake.conf /usr/lib64/qt5/mkspecs/features/spec_pre.prf \
		/usr/lib64/qt5/mkspecs/common/unix.conf \
		/usr/lib64/qt5/mkspecs/common/linux.conf \
		/usr/lib64/qt5/mkspecs/common/sanitize.conf \
		/usr/lib64/qt5/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt5/mkspecs/common/g++-base.conf \
		/usr/lib64/qt5/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt5/mkspecs/qconfig.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_egl_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_fb_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_glx_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_input_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_kms_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_service_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_theme_support_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib64/qt5/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib64/qt5/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt5/mkspecs/features/qt_config.prf \
		/usr/lib64/qt5/mkspecs/linux-g++/qmake.conf \
		/usr/lib64/qt5/mkspecs/features/spec_post.prf \
		/usr/lib64/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt5/mkspecs/features/toolchain.prf \
		/usr/lib64/qt5/mkspecs/features/default_pre.prf \
		/usr/lib64/qt5/mkspecs/features/resolve_config.prf \
		/usr/lib64/qt5/mkspecs/features/default_post.prf \
		/usr/lib64/qt5/mkspecs/features/warn_on.prf \
		/usr/lib64/qt5/mkspecs/features/qt.prf \
		/usr/lib64/qt5/mkspecs/features/resources.prf \
		/usr/lib64/qt5/mkspecs/features/moc.prf \
		/usr/lib64/qt5/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt5/mkspecs/features/qmake_use.prf \
		/usr/lib64/qt5/mkspecs/features/file_copies.prf \
		/usr/lib64/qt5/mkspecs/features/testcase_targets.prf \
		/usr/lib64/qt5/mkspecs/features/exceptions.prf \
		/usr/lib64/qt5/mkspecs/features/yacc.prf \
		/usr/lib64/qt5/mkspecs/features/lex.prf \
		HydrusDBIO.pro \
		/usr/lib64/libQt5Core.prl \
		/usr/lib64/libQt5Sql.prl
	$(QMAKE) -o Makefile HydrusDBIO.pro
/usr/lib64/qt5/mkspecs/features/spec_pre.prf:
/usr/lib64/qt5/mkspecs/common/unix.conf:
/usr/lib64/qt5/mkspecs/common/linux.conf:
/usr/lib64/qt5/mkspecs/common/sanitize.conf:
/usr/lib64/qt5/mkspecs/common/gcc-base.conf:
/usr/lib64/qt5/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt5/mkspecs/common/g++-base.conf:
/usr/lib64/qt5/mkspecs/common/g++-unix.conf:
/usr/lib64/qt5/mkspecs/qconfig.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_concurrent.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_concurrent_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_core.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_core_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_dbus.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_dbus_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_egl_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_fb_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_glx_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_gui.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_gui_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_input_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_kms_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_network.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_network_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_opengl.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_opengl_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_openglextensions.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_printsupport.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_printsupport_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_service_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_sql.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_sql_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_testlib.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_testlib_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_theme_support_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_widgets.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_widgets_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_xml.pri:
/usr/lib64/qt5/mkspecs/modules/qt_lib_xml_private.pri:
/usr/lib64/qt5/mkspecs/features/qt_functions.prf:
/usr/lib64/qt5/mkspecs/features/qt_config.prf:
/usr/lib64/qt5/mkspecs/linux-g++/qmake.conf:
/usr/lib64/qt5/mkspecs/features/spec_post.prf:
/usr/lib64/qt5/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt5/mkspecs/features/toolchain.prf:
/usr/lib64/qt5/mkspecs/features/default_pre.prf:
/usr/lib64/qt5/mkspecs/features/resolve_config.prf:
/usr/lib64/qt5/mkspecs/features/default_post.prf:
/usr/lib64/qt5/mkspecs/features/warn_on.prf:
/usr/lib64/qt5/mkspecs/features/qt.prf:
/usr/lib64/qt5/mkspecs/features/resources.prf:
/usr/lib64/qt5/mkspecs/features/moc.prf:
/usr/lib64/qt5/mkspecs/features/unix/thread.prf:
/usr/lib64/qt5/mkspecs/features/qmake_use.prf:
/usr/lib64/qt5/mkspecs/features/file_copies.prf:
/usr/lib64/qt5/mkspecs/features/testcase_targets.prf:
/usr/lib64/qt5/mkspecs/features/exceptions.prf:
/usr/lib64/qt5/mkspecs/features/yacc.prf:
/usr/lib64/qt5/mkspecs/features/lex.prf:
HydrusDBIO.pro:
/usr/lib64/libQt5Core.prl:
/usr/lib64/libQt5Sql.prl:
qmake: FORCE
	@$(QMAKE) -o Makefile HydrusDBIO.pro

qmake_all: FORCE


all: Makefile $(TARGET)

dist: distdir FORCE
	(cd `dirname $(DISTDIR)` && $(TAR) $(DISTNAME).tar $(DISTNAME) && $(COMPRESS) $(DISTNAME).tar) && $(MOVE) `dirname $(DISTDIR)`/$(DISTNAME).tar.gz . && $(DEL_FILE) -r $(DISTDIR)

distdir: FORCE
	@test -d $(DISTDIR) || mkdir -p $(DISTDIR)
	$(COPY_FILE) --parents $(DIST) $(DISTDIR)/
	$(COPY_FILE) --parents /usr/lib64/qt5/mkspecs/features/data/dummy.cpp $(DISTDIR)/
	$(COPY_FILE) --parents A_LevelObject.h HydrusResultCompresser.h NodeInfoObject.h T_LevelObject.h HydrusInputCompresser.h SelectorParse.h AtmosphParser.h ProfileParser.h importhydrusinputfile.h importhydrusoutputfile.h importer.h A_LevelParser.h BalanceObject.h BalanceParse.h Nod_InfParser.h RuninfoParser.h T_LevelParser.h profiledatabaseobject.h atmosphdatabaseobject.h exporthydrusinputfile.h selectordatabaseobject.h exporter.h exporthydrusoutputfile.h aleveldatabaseobject.h tleveldatabaseobject.h nodinfodatabaseobject.h balancedatabaseobject.h atmosphobject.h profileobject.h selectorobject.h obsnodedatabaseobject.h obs_nodeobject.h obs_nodeparser.h $(DISTDIR)/
	$(COPY_FILE) --parents main.cpp A_LevelObject.cpp HydrusResultCompresser.cpp NodeInfoObject.cpp T_LevelObject.cpp HydrusInputCompresser.cpp SelectorParse.cpp AtmosphParser.cpp ProfileParser.cpp importhydrusinputfile.cpp importhydrusoutputfile.cpp importer.cpp A_LevelParser.cpp BalanceObject.cpp BalanceParse.cpp Nod_InfParser.cpp RuninfoParser.cpp T_LevelParser.cpp profiledatabaseobject.cpp atmosphdatabaseobject.cpp exporthydrusinputfile.cpp selectordatabaseobject.cpp exporter.cpp exporthydrusoutputfile.cpp aleveldatabaseobject.cpp tleveldatabaseobject.cpp nodinfodatabaseobject.cpp balancedatabaseobject.cpp atmosphobject.cpp profileobject.cpp selectorobject.cpp obsnodedatabaseobject.cpp obs_nodeobject.cpp obs_nodeparser.cpp $(DISTDIR)/


clean: compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean 
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) .qmake.stash
	-$(DEL_FILE) Makefile


####### Sub-libraries

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

check: first

benchmark: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_moc_predefs_make_all: moc_predefs.h
compiler_moc_predefs_clean:
	-$(DEL_FILE) moc_predefs.h
moc_predefs.h: /usr/lib64/qt5/mkspecs/features/data/dummy.cpp
	g++ -pipe -O2 -std=gnu++11 -Wall -W -dM -E -o moc_predefs.h /usr/lib64/qt5/mkspecs/features/data/dummy.cpp

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_predefs_clean 

####### Compile

main.o: main.cpp tclap/CmdLine.h \
		tclap/SwitchArg.h \
		tclap/Arg.h \
		tclap/ArgException.h \
		tclap/Visitor.h \
		tclap/CmdLineInterface.h \
		tclap/ArgTraits.h \
		tclap/StandardTraits.h \
		tclap/MultiSwitchArg.h \
		tclap/UnlabeledValueArg.h \
		tclap/ValueArg.h \
		tclap/Constraint.h \
		tclap/OptionalUnlabeledTracker.h \
		tclap/UnlabeledMultiArg.h \
		tclap/MultiArg.h \
		tclap/XorHandler.h \
		tclap/HelpVisitor.h \
		tclap/CmdLineOutput.h \
		tclap/VersionVisitor.h \
		tclap/IgnoreRestVisitor.h \
		tclap/StdOutput.h \
		tclap/ValuesConstraint.h \
		importer.h \
		exporter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

A_LevelObject.o: A_LevelObject.cpp A_LevelObject.h \
		A_LevelParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o A_LevelObject.o A_LevelObject.cpp

HydrusResultCompresser.o: HydrusResultCompresser.cpp HydrusResultCompresser.h \
		A_LevelObject.h \
		A_LevelParser.h \
		T_LevelObject.h \
		T_LevelParser.h \
		BalanceObject.h \
		BalanceParse.h \
		NodeInfoObject.h \
		Nod_InfParser.h \
		RuninfoParser.h \
		obs_nodeobject.h \
		obs_nodeparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HydrusResultCompresser.o HydrusResultCompresser.cpp

NodeInfoObject.o: NodeInfoObject.cpp NodeInfoObject.h \
		Nod_InfParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NodeInfoObject.o NodeInfoObject.cpp

T_LevelObject.o: T_LevelObject.cpp T_LevelObject.h \
		T_LevelParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o T_LevelObject.o T_LevelObject.cpp

HydrusInputCompresser.o: HydrusInputCompresser.cpp HydrusInputCompresser.h \
		selectorobject.h \
		SelectorParse.h \
		atmosphobject.h \
		AtmosphParser.h \
		profileobject.h \
		ProfileParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HydrusInputCompresser.o HydrusInputCompresser.cpp

SelectorParse.o: SelectorParse.cpp SelectorParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SelectorParse.o SelectorParse.cpp

AtmosphParser.o: AtmosphParser.cpp AtmosphParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AtmosphParser.o AtmosphParser.cpp

ProfileParser.o: ProfileParser.cpp ProfileParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ProfileParser.o ProfileParser.cpp

importhydrusinputfile.o: importhydrusinputfile.cpp importhydrusinputfile.h \
		atmosphobject.h \
		AtmosphParser.h \
		HydrusInputCompresser.h \
		profileobject.h \
		ProfileParser.h \
		selectorobject.h \
		SelectorParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importhydrusinputfile.o importhydrusinputfile.cpp

importhydrusoutputfile.o: importhydrusoutputfile.cpp importhydrusoutputfile.h \
		A_LevelObject.h \
		A_LevelParser.h \
		HydrusResultCompresser.h \
		T_LevelObject.h \
		T_LevelParser.h \
		NodeInfoObject.h \
		Nod_InfParser.h \
		BalanceObject.h \
		BalanceParse.h \
		obs_nodeobject.h \
		obs_nodeparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importhydrusoutputfile.o importhydrusoutputfile.cpp

importer.o: importer.cpp importer.h \
		importhydrusinputfile.h \
		importhydrusoutputfile.h \
		HydrusInputCompresser.h \
		HydrusResultCompresser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importer.o importer.cpp

A_LevelParser.o: A_LevelParser.cpp A_LevelParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o A_LevelParser.o A_LevelParser.cpp

BalanceObject.o: BalanceObject.cpp BalanceObject.h \
		BalanceParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BalanceObject.o BalanceObject.cpp

BalanceParse.o: BalanceParse.cpp BalanceParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BalanceParse.o BalanceParse.cpp

Nod_InfParser.o: Nod_InfParser.cpp Nod_InfParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Nod_InfParser.o Nod_InfParser.cpp

RuninfoParser.o: RuninfoParser.cpp RuninfoParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RuninfoParser.o RuninfoParser.cpp

T_LevelParser.o: T_LevelParser.cpp T_LevelParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o T_LevelParser.o T_LevelParser.cpp

profiledatabaseobject.o: profiledatabaseobject.cpp profiledatabaseobject.h \
		profileobject.h \
		ProfileParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o profiledatabaseobject.o profiledatabaseobject.cpp

atmosphdatabaseobject.o: atmosphdatabaseobject.cpp atmosphdatabaseobject.h \
		atmosphobject.h \
		AtmosphParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o atmosphdatabaseobject.o atmosphdatabaseobject.cpp

exporthydrusinputfile.o: exporthydrusinputfile.cpp exporthydrusinputfile.h \
		HydrusInputCompresser.h \
		atmosphdatabaseobject.h \
		atmosphobject.h \
		AtmosphParser.h \
		profiledatabaseobject.h \
		profileobject.h \
		ProfileParser.h \
		selectordatabaseobject.h \
		selectorobject.h \
		SelectorParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exporthydrusinputfile.o exporthydrusinputfile.cpp

selectordatabaseobject.o: selectordatabaseobject.cpp selectordatabaseobject.h \
		selectorobject.h \
		SelectorParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o selectordatabaseobject.o selectordatabaseobject.cpp

exporter.o: exporter.cpp exporter.h \
		exporthydrusinputfile.h \
		exporthydrusoutputfile.h \
		HydrusInputCompresser.h \
		HydrusResultCompresser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exporter.o exporter.cpp

exporthydrusoutputfile.o: exporthydrusoutputfile.cpp exporthydrusoutputfile.h \
		HydrusResultCompresser.h \
		aleveldatabaseobject.h \
		A_LevelObject.h \
		A_LevelParser.h \
		tleveldatabaseobject.h \
		T_LevelObject.h \
		T_LevelParser.h \
		nodinfodatabaseobject.h \
		NodeInfoObject.h \
		Nod_InfParser.h \
		balancedatabaseobject.h \
		BalanceObject.h \
		BalanceParse.h \
		obsnodedatabaseobject.h \
		obs_nodeobject.h \
		obs_nodeparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exporthydrusoutputfile.o exporthydrusoutputfile.cpp

aleveldatabaseobject.o: aleveldatabaseobject.cpp aleveldatabaseobject.h \
		A_LevelObject.h \
		A_LevelParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aleveldatabaseobject.o aleveldatabaseobject.cpp

tleveldatabaseobject.o: tleveldatabaseobject.cpp tleveldatabaseobject.h \
		T_LevelObject.h \
		T_LevelParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tleveldatabaseobject.o tleveldatabaseobject.cpp

nodinfodatabaseobject.o: nodinfodatabaseobject.cpp nodinfodatabaseobject.h \
		NodeInfoObject.h \
		Nod_InfParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodinfodatabaseobject.o nodinfodatabaseobject.cpp

balancedatabaseobject.o: balancedatabaseobject.cpp balancedatabaseobject.h \
		BalanceObject.h \
		BalanceParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o balancedatabaseobject.o balancedatabaseobject.cpp

atmosphobject.o: atmosphobject.cpp atmosphobject.h \
		AtmosphParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o atmosphobject.o atmosphobject.cpp

profileobject.o: profileobject.cpp profileobject.h \
		ProfileParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o profileobject.o profileobject.cpp

selectorobject.o: selectorobject.cpp selectorobject.h \
		SelectorParse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o selectorobject.o selectorobject.cpp

obsnodedatabaseobject.o: obsnodedatabaseobject.cpp obsnodedatabaseobject.h \
		obs_nodeobject.h \
		obs_nodeparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obsnodedatabaseobject.o obsnodedatabaseobject.cpp

obs_nodeobject.o: obs_nodeobject.cpp obs_nodeobject.h \
		obs_nodeparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obs_nodeobject.o obs_nodeobject.cpp

obs_nodeparser.o: obs_nodeparser.cpp obs_nodeparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obs_nodeparser.o obs_nodeparser.cpp

####### Install

install:  FORCE

uninstall:  FORCE

FORCE:

