SET default_tablespace = '';
SET default_with_oids = false;
SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;
COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';
SET search_path = public, pg_catalog;
CREATE TABLE public.selector
(
  gid integer NOT NULL,
  version smallint NOT NULL DEFAULT 4,
  tmax double precision,
  nmat smallint DEFAULT 1,
  nlay smallint DEFAULT 1,
  tprintinterval real DEFAULT 10,
  p0 real DEFAULT 0,
  p2h real DEFAULT '-500'::integer,
  p2l real DEFAULT '-900'::integer,
  p3 real DEFAULT '-16000'::integer,
  nprintsteps smallint DEFAULT 1,
  ngrowth smallint,
  r2h real DEFAULT 0.5,
  r2l real DEFAULT 0.1,
  matpar real[],
  tprint real[],
  rootdepth real[],
  type character varying(10) DEFAULT 'wheat'::character varying,
  status character varying(50) DEFAULT 'todo'::character varying,
  chpar1 real[],
  chpar3 real[],
  omegac real DEFAULT 1,
  lunit character varying(5) DEFAULT 'cm'::character varying,
  tunit character varying(5) DEFAULT 'days'::character varying,
  munit character varying(5) DEFAULT 'mmol'::character varying,
  lwat boolean DEFAULT true,
  lchem boolean DEFAULT false,
  lsink boolean DEFAULT true,
  lroot boolean DEFAULT true,
  lshort boolean DEFAULT true,
  lequil boolean DEFAULT true,
  cosalpha double precision DEFAULT 1,
  maxit smallint DEFAULT 500,
  tolth double precision DEFAULT 0.001,
  tolh double precision DEFAULT 1,
  walyer boolean DEFAULT true,
  linitw boolean DEFAULT true,
  ha double precision DEFAULT 0.000001,
  hb double precision DEFAULT 10000,
  dt real DEFAULT 0.001,
  dtmin real DEFAULT 0.00001,
  dtmax real DEFAULT 0.5,
  dmul real DEFAULT 1.3,
  dmul2 real DEFAULT 0.7,
  itmin smallint DEFAULT 3,
  itmax smallint DEFAULT 7,
  mpl integer DEFAULT 1,
  tinit real DEFAULT 0,
  lprint boolean DEFAULT true,
  tgrowth real[],
  imodel smallint DEFAULT 0,
  epsi real DEFAULT 0.5,
  lupw boolean DEFAULT false,
  lartd boolean DEFAULT false,
  ctola real DEFAULT 0,
  ctolr real DEFAULT 0,
  maxitc smallint DEFAULT 1,
  pecr real DEFAULT 2,
  ns smallint DEFAULT 0,
  ltort boolean DEFAULT false,
  lfiltr boolean DEFAULT false,
  nchpar smallint DEFAULT 16,
  inonequal smallint DEFAULT 0,
  lmassini boolean DEFAULT false,
  leqinit boolean DEFAULT false,
  ltorta boolean DEFAULT false,
  chpar2 real[] DEFAULT ARRAY[0, 0],
  ktopch smallint DEFAULT '-1'::integer,
  ctop real[],
  kbotch smallint DEFAULT 0,
  cbot real[],
  dsurf real DEFAULT 0,
  catm real DEFAULT 0,
  tpulse real DEFAULT 0,
  crootmax real[] DEFAULT ARRAY[1],
  poptm real[],
  maxal integer,
  hcrits real DEFAULT 1000,
  nobs smallint DEFAULT 0,
  iobs integer[],
  numnp smallint,
  iday smallint,
  imonth smallint,
  ihours smallint,
  imins smallint,
  isecs smallint,
  caltm double precision,
  CONSTRAINT selector_pkey PRIMARY KEY (gid, version),
  CONSTRAINT selector_imodel_check CHECK (imodel <> 1 AND imodel < 5),
  CONSTRAINT selector_inonequal_check CHECK (inonequal < 3)
);
CREATE TABLE public.errlog
(
  gid integer NOT NULL,
  errordes character varying(1000),
  CONSTRAINT errlogpk PRIMARY KEY (gid)
);
CREATE OR REPLACE FUNCTION public.errlog_insert_trig()
  RETURNS trigger AS
$BODY$
BEGIN
   update selector set status='error' where gid=new.gid;
   return null;
end;
$BODY$
  LANGUAGE plpgsql; 
CREATE TRIGGER errlog_insert
  AFTER INSERT
  ON public.errlog
  FOR EACH ROW
  EXECUTE PROCEDURE public.errlog_insert_trig();
CREATE TABLE public.soilcolumnpositions
(
  gid integer NOT NULL,
  x real,
  y real,
  landuse character varying(50),
  geom geometry(point,4326),
  CONSTRAINT soilcolumnpositions_pkey PRIMARY KEY (gid)
);
CREATE TABLE public.balancetotal
(
  gid integer NOT NULL,
  tm double precision NOT NULL,
  length double precision,
  volumn double precision,
  inflow double precision,
  hmean double precision,
  concvol1 double precision,
  concvol2 double precision,
  concvol3 double precision,
  concvol4 double precision,
  concvol5 double precision,
  concvol6 double precision,
  concvol7 double precision,
  concvol8 double precision,
  concvol9 double precision,
  concvol10 double precision,
  sorbvolim1 double precision,
  sorbvolim2 double precision,
  sorbvolim3 double precision,
  sorbvolim4 double precision,
  sorbvolim5 double precision,
  sorbvolim6 double precision,
  sorbvolim7 double precision,
  sorbvolim8 double precision,
  sorbvolim9 double precision,
  sorbvolim10 double precision,
  cmean1 double precision,
  cmean2 double precision,
  cmean3 double precision,
  cmean4 double precision,
  cmean5 double precision,
  cmean6 double precision,
  cmean7 double precision,
  cmean8 double precision,
  cmean9 double precision,
  cmean10 double precision,
  smeanim1 double precision,
  smeanim2 double precision,
  smeanim3 double precision,
  smeanim4 double precision,
  smeanim5 double precision,
  smeanim6 double precision,
  smeanim7 double precision,
  smeanim8 double precision,
  smeanim9 double precision,
  smeanim10 double precision,
  topflux double precision,
  botflux double precision,
  watbalt double precision,
  watbalr double precision,
  cncbalt1 double precision,
  cncbalt2 double precision,
  cncbalt3 double precision,
  cncbalt4 double precision,
  cncbalt5 double precision,
  cncbalt6 double precision,
  cncbalt7 double precision,
  cncbalt8 double precision,
  cncbalt9 double precision,
  cncbalt10 double precision,
  cncbalr1 double precision,
  cncbalr2 double precision,
  cncbalr3 double precision,
  cncbalr4 double precision,
  cncbalr5 double precision,
  cncbalr6 double precision,
  cncbalr7 double precision,
  cncbalr8 double precision,
  cncbalr9 double precision,
  cncbalr10 double precision,
  CONSTRAINT balancetotal_pkey PRIMARY KEY (gid, tm)
);
CREATE TABLE public.balancelayer
(
  gid integer NOT NULL,
  tm double precision NOT NULL,
  layer smallint NOT NULL,
  length double precision,
  volumn double precision,
  inflow double precision,
  hmean double precision,
  concvol1 double precision,
  concvol2 double precision,
  concvol3 double precision,
  concvol4 double precision,
  concvol5 double precision,
  concvol6 double precision,
  concvol7 double precision,
  concvol8 double precision,
  concvol9 double precision,
  concvol10 double precision,
  cmean1 double precision,
  cmean2 double precision,
  cmean3 double precision,
  cmean4 double precision,
  cmean5 double precision,
  cmean6 double precision,
  cmean7 double precision,
  cmean8 double precision,
  cmean9 double precision,
  cmean10 double precision,
  sorbvolim1 double precision,
  sorbvolim2 double precision,
  sorbvolim3 double precision,
  sorbvolim4 double precision,
  sorbvolim5 double precision,
  sorbvolim6 double precision,
  sorbvolim7 double precision,
  sorbvolim8 double precision,
  sorbvolim9 double precision,
  sorbvolim10 double precision,
  smeanim1 double precision,
  smeanim2 double precision,
  smeanim3 double precision,
  smeanim4 double precision,
  smeanim5 double precision,
  smeanim6 double precision,
  smeanim7 double precision,
  smeanim8 double precision,
  smeanim9 double precision,
  smeanim10 double precision,
  CONSTRAINT balancelayer_pkey PRIMARY KEY (gid, tm, layer)
);
